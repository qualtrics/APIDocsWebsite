{"version":3,"file":"component---src-pages-guides-tsx-ae4558f0293b1f8ec4e6.js","mappings":"wOAMAA,EAAQ,OAkCR,UAhCmB,WACjB,IAAIC,EAAW,GACTC,EAAUC,SAASC,SAASC,MAAM,WAAW,GAC7CC,EAASH,SAASI,KACpBL,EAAQG,MAAM,KAAKG,OAAS,IAE9BP,GADWQ,EAAAA,EAAAA,GAAY,UAAWP,EAASI,IAI7C,OACE,2BACiB,KAAbL,EACA,gBAAC,IAAD,KACE,wBAAMS,UAAU,UACVC,QAAO,SAAWV,KAGxB,gBAAC,IAAD,KACF,gBAAC,KAAD,CACEW,YAAY,uBACZC,UAAU,cACVC,SAAS,SACTC,yBAAyB,EACzBC,OAA0B,oBAAXC,OAAyB,SAAW","sources":["webpack://@qualtrics/qualtrics-api-documentation/./src/pages/guides.tsx"],"sourcesContent":["import { StoplightProject } from \"@stoplight/elements-dev-portal\";\r\nimport React from \"react\";\r\nimport {Helmet} from \"react-helmet\"\r\nimport Layout from \"../components/layout\";\r\nimport {getRedirect} from \"../services/redirectTool\"\r\n\r\nrequire(\"@stoplight/elements-dev-portal/styles.min.css\");\r\n\r\nconst GuidesPage = () => {\r\n  let redirect = \"\";\r\n  const nodeUri = location.pathname.split('/guides')[1];\r\n  const anchor = location.hash;\r\n  if (nodeUri.split(\"/\").length > 2){\r\n    let path = getRedirect(\"/guides\", nodeUri, anchor);\r\n    redirect = path;\r\n  }\r\n \r\n  return (\r\n    <div>\r\n      { redirect !== \"\" ? (\r\n        <Helmet>\r\n          <meta httpEquiv=\"refresh\" \r\n                content={`0;url=${redirect}`}/>\r\n        </Helmet>\r\n        ) : (  \r\n          <Layout>   \r\n        <StoplightProject\r\n          platformUrl=\"https://stoplight.io\"\r\n          projectId=\"cHJqOjk3NDQ\"\r\n          basePath=\"guides\"\r\n          collapseTableOfContents={true}\r\n          router={typeof window === \"undefined\" ? \"memory\" : \"history\"}\r\n        />\r\n        </Layout> \r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuidesPage;\r\n"],"names":["require","redirect","nodeUri","location","pathname","split","anchor","hash","length","getRedirect","httpEquiv","content","platformUrl","projectId","basePath","collapseTableOfContents","router","window"],"sourceRoot":""}