{"version":3,"file":"component---src-pages-instructions-tsx-0717dbcc06f93d776665.js","mappings":"wOAMAA,EAAQ,OAgCR,UA9ByB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtBC,EAAW,GACTC,EAAUF,EAASG,SAASC,MAAM,iBAAiB,GACnDC,EAASL,EAASM,KACpBJ,EAAQE,MAAM,KAAKG,OAAS,IAE9BN,GADWO,EAAAA,EAAAA,GAAY,gBAAiBN,EAASG,IAInD,OACE,2BACgB,KAAbJ,EACC,gBAAC,IAAD,KACE,wBAAMQ,UAAU,UAAUC,QAAO,SAAWT,KAG9C,gBAAC,IAAD,KACE,gBAAC,KAAD,CACEU,YAAY,uBACZC,UAAU,cACVC,SAAS,eACTC,yBAAyB,EACzBC,OAA0B,oBAAXC,OAAyB,SAAW","sources":["webpack://@qualtrics/qualtrics-api-documentation/./src/pages/instructions.tsx"],"sourcesContent":["import { StoplightProject } from \"@stoplight/elements-dev-portal\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Layout from \"../components/layout\";\nimport { getRedirect } from \"../services/redirectTool\";\n\nrequire(\"@stoplight/elements-dev-portal/styles.min.css\");\n\nconst InstructionsPage = ({ location }) => {\n  let redirect = \"\";\n  const nodeUri = location.pathname.split(\"/instructions\")[1];\n  const anchor = location.hash;\n  if (nodeUri.split(\"/\").length > 2) {\n    let path = getRedirect(\"/instructions\", nodeUri, anchor);\n    redirect = path;\n  }\n\n  return (\n    <div>\n      {redirect !== \"\" ? (\n        <Helmet>\n          <meta httpEquiv=\"refresh\" content={`0;url=${redirect}`} />\n        </Helmet>\n      ) : (\n        <Layout>\n          <StoplightProject\n            platformUrl=\"https://stoplight.io\"\n            projectId=\"cHJqOjk3NDQ\"\n            basePath=\"instructions\"\n            collapseTableOfContents={true}\n            router={typeof window === \"undefined\" ? \"memory\" : \"history\"}\n          />\n        </Layout>\n      )}\n    </div>\n  );\n};\n\nexport default InstructionsPage;\n"],"names":["require","location","redirect","nodeUri","pathname","split","anchor","hash","length","getRedirect","httpEquiv","content","platformUrl","projectId","basePath","collapseTableOfContents","router","window"],"sourceRoot":""}